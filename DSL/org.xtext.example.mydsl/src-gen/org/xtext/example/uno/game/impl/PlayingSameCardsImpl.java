/**
 * generated by Xtext 2.23.0
 */
package org.xtext.example.uno.game.impl;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.xtext.example.uno.game.GamePackage;
import org.xtext.example.uno.game.PlayingSameCards;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Playing Same Cards</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.uno.game.impl.PlayingSameCardsImpl#getSameNumber <em>Same Number</em>}</li>
 *   <li>{@link org.xtext.example.uno.game.impl.PlayingSameCardsImpl#getSameColor <em>Same Color</em>}</li>
 * </ul>
 *
 * @generated
 */
public class PlayingSameCardsImpl extends MinimalEObjectImpl.Container implements PlayingSameCards
{
  /**
   * The default value of the '{@link #getSameNumber() <em>Same Number</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSameNumber()
   * @generated
   * @ordered
   */
  protected static final String SAME_NUMBER_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getSameNumber() <em>Same Number</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSameNumber()
   * @generated
   * @ordered
   */
  protected String sameNumber = SAME_NUMBER_EDEFAULT;

  /**
   * The default value of the '{@link #getSameColor() <em>Same Color</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSameColor()
   * @generated
   * @ordered
   */
  protected static final String SAME_COLOR_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getSameColor() <em>Same Color</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSameColor()
   * @generated
   * @ordered
   */
  protected String sameColor = SAME_COLOR_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected PlayingSameCardsImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return GamePackage.Literals.PLAYING_SAME_CARDS;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getSameNumber()
  {
    return sameNumber;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setSameNumber(String newSameNumber)
  {
    String oldSameNumber = sameNumber;
    sameNumber = newSameNumber;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, GamePackage.PLAYING_SAME_CARDS__SAME_NUMBER, oldSameNumber, sameNumber));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getSameColor()
  {
    return sameColor;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setSameColor(String newSameColor)
  {
    String oldSameColor = sameColor;
    sameColor = newSameColor;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, GamePackage.PLAYING_SAME_CARDS__SAME_COLOR, oldSameColor, sameColor));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case GamePackage.PLAYING_SAME_CARDS__SAME_NUMBER:
        return getSameNumber();
      case GamePackage.PLAYING_SAME_CARDS__SAME_COLOR:
        return getSameColor();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case GamePackage.PLAYING_SAME_CARDS__SAME_NUMBER:
        setSameNumber((String)newValue);
        return;
      case GamePackage.PLAYING_SAME_CARDS__SAME_COLOR:
        setSameColor((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case GamePackage.PLAYING_SAME_CARDS__SAME_NUMBER:
        setSameNumber(SAME_NUMBER_EDEFAULT);
        return;
      case GamePackage.PLAYING_SAME_CARDS__SAME_COLOR:
        setSameColor(SAME_COLOR_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case GamePackage.PLAYING_SAME_CARDS__SAME_NUMBER:
        return SAME_NUMBER_EDEFAULT == null ? sameNumber != null : !SAME_NUMBER_EDEFAULT.equals(sameNumber);
      case GamePackage.PLAYING_SAME_CARDS__SAME_COLOR:
        return SAME_COLOR_EDEFAULT == null ? sameColor != null : !SAME_COLOR_EDEFAULT.equals(sameColor);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (sameNumber: ");
    result.append(sameNumber);
    result.append(", sameColor: ");
    result.append(sameColor);
    result.append(')');
    return result.toString();
  }

} //PlayingSameCardsImpl
