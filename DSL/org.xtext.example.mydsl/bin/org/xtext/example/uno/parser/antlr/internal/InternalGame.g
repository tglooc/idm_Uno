/*
 * generated by Xtext 2.23.0
 */
grammar InternalGame;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.xtext.example.uno.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtext.example.uno.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.example.uno.services.GameGrammarAccess;

}

@parser::members {

 	private GameGrammarAccess grammarAccess;

    public InternalGameParser(TokenStream input, GameGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Game";
   	}

   	@Override
   	protected GameGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleGame
entryRuleGame returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGameRule()); }
	iv_ruleGame=ruleGame
	{ $current=$iv_ruleGame.current; }
	EOF;

// Rule Game
ruleGame returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Game'
		{
			newLeafNode(otherlv_0, grammarAccess.getGameAccess().getGameKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getGameAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				{ 
				  getUnorderedGroupHelper().enter(grammarAccess.getGameAccess().getUnorderedGroup_2());
				}
				(
					(
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getGameAccess().getUnorderedGroup_2(), 0)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getGameAccess().getUnorderedGroup_2(), 0);
					}
								({true}?=>((
									lv_twoPlayers_3_0='twoPlayers'
									{
										newLeafNode(lv_twoPlayers_3_0, grammarAccess.getGameAccess().getTwoPlayersTwoPlayersKeyword_2_0_0());
									}
									{
										if ($current==null) {
											$current = createModelElement(grammarAccess.getGameRule());
										}
										setWithLastConsumed($current, "twoPlayers", lv_twoPlayers_3_0, "twoPlayers");
									}
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getGameAccess().getUnorderedGroup_2());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getGameAccess().getUnorderedGroup_2(), 1)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getGameAccess().getUnorderedGroup_2(), 1);
					}
								({true}?=>((
									{
										newCompositeNode(grammarAccess.getGameAccess().getTimeTimeParserRuleCall_2_1_0());
									}
									lv_time_4_0=ruleTime
									{
										if ($current==null) {
											$current = createModelElementForParent(grammarAccess.getGameRule());
										}
										set(
											$current,
											"time",
											lv_time_4_0,
											"org.xtext.example.uno.Game.Time");
										afterParserOrEnumRuleCall();
									}
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getGameAccess().getUnorderedGroup_2());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getGameAccess().getUnorderedGroup_2(), 2)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getGameAccess().getUnorderedGroup_2(), 2);
					}
								({true}?=>((
									{
										newCompositeNode(grammarAccess.getGameAccess().getRotatingCardsRotatingCardsParserRuleCall_2_2_0());
									}
									lv_rotatingCards_5_0=ruleRotatingCards
									{
										if ($current==null) {
											$current = createModelElementForParent(grammarAccess.getGameRule());
										}
										set(
											$current,
											"rotatingCards",
											lv_rotatingCards_5_0,
											"org.xtext.example.uno.Game.RotatingCards");
										afterParserOrEnumRuleCall();
									}
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getGameAccess().getUnorderedGroup_2());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getGameAccess().getUnorderedGroup_2(), 3)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getGameAccess().getUnorderedGroup_2(), 3);
					}
								({true}?=>((
									{
										newCompositeNode(grammarAccess.getGameAccess().getPlayingSameCardsPlayingSameCardsParserRuleCall_2_3_0());
									}
									lv_playingSameCards_6_0=rulePlayingSameCards
									{
										if ($current==null) {
											$current = createModelElementForParent(grammarAccess.getGameRule());
										}
										set(
											$current,
											"playingSameCards",
											lv_playingSameCards_6_0,
											"org.xtext.example.uno.Game.PlayingSameCards");
										afterParserOrEnumRuleCall();
									}
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getGameAccess().getUnorderedGroup_2());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getGameAccess().getUnorderedGroup_2(), 4)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getGameAccess().getUnorderedGroup_2(), 4);
					}
								({true}?=>((
									{
										newCompositeNode(grammarAccess.getGameAccess().getDrawDrawParserRuleCall_2_4_0());
									}
									lv_draw_7_0=ruleDraw
									{
										if ($current==null) {
											$current = createModelElementForParent(grammarAccess.getGameRule());
										}
										set(
											$current,
											"draw",
											lv_draw_7_0,
											"org.xtext.example.uno.Game.Draw");
										afterParserOrEnumRuleCall();
									}
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getGameAccess().getUnorderedGroup_2());
					}
				)
			)
					)+
					{getUnorderedGroupHelper().canLeave(grammarAccess.getGameAccess().getUnorderedGroup_2())}?
				)
			)
				{ 
				  getUnorderedGroupHelper().leave(grammarAccess.getGameAccess().getUnorderedGroup_2());
				}
		)
		otherlv_8='}'
		{
			newLeafNode(otherlv_8, grammarAccess.getGameAccess().getRightCurlyBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleTime
entryRuleTime returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTimeRule()); }
	iv_ruleTime=ruleTime
	{ $current=$iv_ruleTime.current; }
	EOF;

// Rule Time
ruleTime returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='time'
		{
			newLeafNode(otherlv_0, grammarAccess.getTimeAccess().getTimeKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getTimeAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				(
					lv_limited_2_0='limited'
					{
						newLeafNode(lv_limited_2_0, grammarAccess.getTimeAccess().getLimitedLimitedKeyword_2_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getTimeRule());
						}
						setWithLastConsumed($current, "limited", lv_limited_2_0, "limited");
					}
				)
			)
			    |
			(
				(
					lv_unlimited_3_0='unlimited'
					{
						newLeafNode(lv_unlimited_3_0, grammarAccess.getTimeAccess().getUnlimitedUnlimitedKeyword_2_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getTimeRule());
						}
						setWithLastConsumed($current, "unlimited", lv_unlimited_3_0, "unlimited");
					}
				)
			)
		)
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getTimeAccess().getRightCurlyBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleRotatingCards
entryRuleRotatingCards returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRotatingCardsRule()); }
	iv_ruleRotatingCards=ruleRotatingCards
	{ $current=$iv_ruleRotatingCards.current; }
	EOF;

// Rule RotatingCards
ruleRotatingCards returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getRotatingCardsAccess().getRotatingCardsAction_0(),
					$current);
			}
		)
		otherlv_1='rotatingCards'
		{
			newLeafNode(otherlv_1, grammarAccess.getRotatingCardsAccess().getRotatingCardsKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getRotatingCardsAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{ 
				  getUnorderedGroupHelper().enter(grammarAccess.getRotatingCardsAccess().getUnorderedGroup_3());
				}
				(
					(
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getRotatingCardsAccess().getUnorderedGroup_3(), 0)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getRotatingCardsAccess().getUnorderedGroup_3(), 0);
					}
								({true}?=>((
									lv_rotatingZero_4_0='rotatingZero'
									{
										newLeafNode(lv_rotatingZero_4_0, grammarAccess.getRotatingCardsAccess().getRotatingZeroRotatingZeroKeyword_3_0_0());
									}
									{
										if ($current==null) {
											$current = createModelElement(grammarAccess.getRotatingCardsRule());
										}
										setWithLastConsumed($current, "rotatingZero", lv_rotatingZero_4_0, "rotatingZero");
									}
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getRotatingCardsAccess().getUnorderedGroup_3());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getRotatingCardsAccess().getUnorderedGroup_3(), 1)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getRotatingCardsAccess().getUnorderedGroup_3(), 1);
					}
								({true}?=>((
									lv_rotatingSeven_5_0='rotatingSeven'
									{
										newLeafNode(lv_rotatingSeven_5_0, grammarAccess.getRotatingCardsAccess().getRotatingSevenRotatingSevenKeyword_3_1_0());
									}
									{
										if ($current==null) {
											$current = createModelElement(grammarAccess.getRotatingCardsRule());
										}
										setWithLastConsumed($current, "rotatingSeven", lv_rotatingSeven_5_0, "rotatingSeven");
									}
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getRotatingCardsAccess().getUnorderedGroup_3());
					}
				)
			)
					)*
				)
			)
				{ 
				  getUnorderedGroupHelper().leave(grammarAccess.getRotatingCardsAccess().getUnorderedGroup_3());
				}
		)
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getRotatingCardsAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRulePlayingSameCards
entryRulePlayingSameCards returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPlayingSameCardsRule()); }
	iv_rulePlayingSameCards=rulePlayingSameCards
	{ $current=$iv_rulePlayingSameCards.current; }
	EOF;

// Rule PlayingSameCards
rulePlayingSameCards returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='playingSameCards'
		{
			newLeafNode(otherlv_0, grammarAccess.getPlayingSameCardsAccess().getPlayingSameCardsKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getPlayingSameCardsAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				{ 
				  getUnorderedGroupHelper().enter(grammarAccess.getPlayingSameCardsAccess().getUnorderedGroup_2());
				}
				(
					(
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getPlayingSameCardsAccess().getUnorderedGroup_2(), 0)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getPlayingSameCardsAccess().getUnorderedGroup_2(), 0);
					}
								({true}?=>((
									lv_sameNumber_3_0='sameNumber'
									{
										newLeafNode(lv_sameNumber_3_0, grammarAccess.getPlayingSameCardsAccess().getSameNumberSameNumberKeyword_2_0_0());
									}
									{
										if ($current==null) {
											$current = createModelElement(grammarAccess.getPlayingSameCardsRule());
										}
										setWithLastConsumed($current, "sameNumber", lv_sameNumber_3_0, "sameNumber");
									}
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getPlayingSameCardsAccess().getUnorderedGroup_2());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getPlayingSameCardsAccess().getUnorderedGroup_2(), 1)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getPlayingSameCardsAccess().getUnorderedGroup_2(), 1);
					}
								({true}?=>((
									lv_sameColor_4_0='sameColor'
									{
										newLeafNode(lv_sameColor_4_0, grammarAccess.getPlayingSameCardsAccess().getSameColorSameColorKeyword_2_1_0());
									}
									{
										if ($current==null) {
											$current = createModelElement(grammarAccess.getPlayingSameCardsRule());
										}
										setWithLastConsumed($current, "sameColor", lv_sameColor_4_0, "sameColor");
									}
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getPlayingSameCardsAccess().getUnorderedGroup_2());
					}
				)
			)
					)+
					{getUnorderedGroupHelper().canLeave(grammarAccess.getPlayingSameCardsAccess().getUnorderedGroup_2())}?
				)
			)
				{ 
				  getUnorderedGroupHelper().leave(grammarAccess.getPlayingSameCardsAccess().getUnorderedGroup_2());
				}
		)
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getPlayingSameCardsAccess().getRightCurlyBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleDraw
entryRuleDraw returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDrawRule()); }
	iv_ruleDraw=ruleDraw
	{ $current=$iv_ruleDraw.current; }
	EOF;

// Rule Draw
ruleDraw returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='draw'
		{
			newLeafNode(otherlv_0, grammarAccess.getDrawAccess().getDrawKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getDrawAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				(
					lv_oneCard_2_0='oneCard'
					{
						newLeafNode(lv_oneCard_2_0, grammarAccess.getDrawAccess().getOneCardOneCardKeyword_2_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDrawRule());
						}
						setWithLastConsumed($current, "oneCard", lv_oneCard_2_0, "oneCard");
					}
				)
			)
			    |
			(
				(
					lv_threeCards_3_0='threeCards'
					{
						newLeafNode(lv_threeCards_3_0, grammarAccess.getDrawAccess().getThreeCardsThreeCardsKeyword_2_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDrawRule());
						}
						setWithLastConsumed($current, "threeCards", lv_threeCards_3_0, "threeCards");
					}
				)
			)
		)
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getDrawAccess().getRightCurlyBracketKeyword_3());
		}
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
